#!/bin/ash
if [[ -z "$1" ]]; then
   echo "Please provide a movie title"
   echo "Usage:"
   echo "docker run -t <image:tag> <title>"
   exit 1
fi
MOVIE=$(echo $* | sed 's/ /+/g')
MOVIE_RESULT=$(curl "http://www.omdbapi.com?apikey=19688734&t=$MOVIE" 2>/dev/null)
OMDB_RESPONSE=$(echo $MOVIE_RESULT | jq -r '.Response')
if [[ -z "$MOVIE_RESULT" || "$OMDB_RESPONSE" == "False" ]]; then
   MOVIE_SEARCH_RESULT=$(curl "http://www.omdbapi.com?apikey=19688734&s=$MOVIE" 2>/dev/null)
   OMDB_SEARCH_RESPONSE=$(echo $MOVIE_SEARCH_RESULT | jq -r '.Response')
   if [[ -z "$MOVIE_SEARCH_RESULT" || "$OMDB_SEARCH_RESPONSE" == "False" ]]; then
      echo "Your entered movie is not found and we were unable to locate any movies that had similar names"
      exit 2
   fi
   echo "There are $(echo $MOVIE_SEARCH_RESULT | jq -r '.totalResults') movies that search was able to locate"
   echo $MOVIE_SEARCH_RESULT | jq '.Search[] | .Title'
   exit 3
fi

MOVIE_TITLE=$(echo "$MOVIE_RESULT" | jq -r '.Title')
LOWER_TITLE=$(echo "$MOVIE_TITLE" | tr '[:upper:]' '[:lower:]')
LOWER_ENTERED=$(echo -n "$*" | tr '[:upper:]' '[:lower:]')

if [[ "$LOWER_TITLE" != "$LOWER_ENTERED" ]]; then
   MOVIE_SEARCH_RESULT=$(curl "http://www.omdbapi.com?apikey=19688734&s=$MOVIE" 2>/dev/null)
   OMDB_SEARCH_RESPONSE=$(echo $MOVIE_SEARCH_RESULT | jq -r '.Response')
   echo "We were unable to locate an exact match, but there are $(echo $MOVIE_SEARCH_RESULT | jq -r '.totalResults') movies that search was able to locate, here are a few"
   echo $MOVIE_SEARCH_RESULT | jq '.Search[] | .Title'
   exit 4
fi

export RATING=$(curl "http://www.omdbapi.com?apikey=19688734&t=$MOVIE" 2>/dev/null |  jq -r '.Ratings[] | select(.Source == "Rotten Tomatoes") | .Value')
if [[ -z "$RATING" ]]; then
   echo "Unable to locate Rotten Tomatoes ratings for $1"
   echo "Please check spelling of the movie"
   exit 4
fi

echo "Rotten Tomatoes has a rating of $RATING for $MOVIE_TITLE"
exit 0
